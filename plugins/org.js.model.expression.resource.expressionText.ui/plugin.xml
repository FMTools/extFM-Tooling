<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
	<extension point="org.emftext.access.syntax.ui">
		<metaInformationProvider class="org.js.model.expression.resource.expressionText.ui.ExpressionTextUIMetaInformation" id="org.js.model.expression.resource.expressionText.ui.ExpressionTextUIMetaInformation">
		</metaInformationProvider>
	</extension>
	
	<extension point="org.eclipse.ui.editors">
		<editor class="org.js.model.expression.resource.expressionText.ui.ExpressionTextEditor" contributorClass="org.eclipse.ui.texteditor.BasicTextEditorActionContributor" extensions="expressionText" icon="icons/editor_icon.gif" id="org.js.model.expression.resource.expressionText.ui.ExpressionTextEditor" name="EMFText expressionText Editor">
			<contentTypeBinding contentTypeId="org.js.model.expression.resource.expressionText">
			</contentTypeBinding>
		</editor>
	</extension>
	
	<extension point="org.eclipse.core.runtime.preferences">
		<initializer class="org.js.model.expression.resource.expressionText.ui.ExpressionTextPreferenceInitializer">
		</initializer>
	</extension>
	
	<extension point="org.eclipse.ui.preferencePages">
		<page name="ExpressionText Text Editor" id="org.js.model.expression.resource.expressionText.ui.ExpressionTextPreferencePage" class="org.js.model.expression.resource.expressionText.ui.ExpressionTextPreferencePage" category="org.eclipse.ui.preferencePages.GeneralTextEditor">
		</page>
		<page name="Syntax Coloring" id="org.js.model.expression.resource.expressionText.ui.ExpressionTextSyntaxColoringPreferencePage" class="org.js.model.expression.resource.expressionText.ui.ExpressionTextSyntaxColoringPreferencePage" category="org.js.model.expression.resource.expressionText.ui.ExpressionTextPreferencePage">
		</page>
		<page name="Brackets" id="org.js.model.expression.resource.expressionText.ui.ExpressionTextBracketPreferencePage" class="org.js.model.expression.resource.expressionText.ui.ExpressionTextBracketPreferencePage" category="org.js.model.expression.resource.expressionText.ui.ExpressionTextPreferencePage">
		</page>
	</extension>
	
	<extension point="org.eclipse.ui.newWizards">
		<category id="org.emftext.runtime.ui.EMFTextFileCategory" name="EMFText File">
		</category>
		<wizard category="org.emftext.runtime.ui.EMFTextFileCategory" icon="/icons/default_new_icon.gif" class="org.js.model.expression.resource.expressionText.ui.ExpressionTextNewFileWizard" id="org.js.model.expression.resource.expressionText.ui.ExpressionTextNewFileWizard" name="EMFText .expressionText file">
		</wizard>
	</extension>
	
	<extension point="org.eclipse.ui.ide.markerResolution">
		<markerResolutionGenerator class="org.js.model.expression.resource.expressionText.ui.ExpressionTextMarkerResolutionGenerator" markerType="org.js.model.expression.resource.expressionText.problem">
		</markerResolutionGenerator>
	</extension>
	
	<extension point="org.eclipse.core.filebuffers.annotationModelCreation">
		<factory class="org.js.model.expression.resource.expressionText.ui.ExpressionTextAnnotationModelFactory" extensions="expressionText">
		</factory>
	</extension>
	
	<extension point="org.eclipse.core.contenttype.contentTypes">
		<content-type id="org.js.model.expression.resource.expressionText" name=".expressionText File" base-type="org.eclipse.core.runtime.text" file-extensions="expressionText">
		</content-type>
	</extension>
	
	<extension point="org.eclipse.ui.editors.documentProviders">
		<provider class="org.eclipse.ui.editors.text.TextFileDocumentProvider" extensions="expressionText" id="org.js.model.expression.resource.expressionText.ui.provider">
		</provider>
	</extension>
	
	<extension point="org.eclipse.ui.editors.annotationTypes">
		<type name="org.js.model.expression.resource.expressionText.ui.occurences">
		</type>
		<type name="org.js.model.expression.resource.expressionText.ui.occurences.declaration" super="org.js.model.expression.resource.expressionText.ui.occurences">
		</type>
	</extension>
	
	<extension point="org.eclipse.ui.editors.markerAnnotationSpecification">
		<specification annotationType="org.js.model.expression.resource.expressionText.ui.occurences" label="Occurrences (in .expressionText files)" icon="/icons/occurrence_icon.gif" textPreferenceKey="expressionText.occurrenceIndication" textPreferenceValue="false" highlightPreferenceKey="expressionText.occurrenceHighlighting" highlightPreferenceValue="true" contributesToHeader="false" overviewRulerPreferenceKey="expressionText.occurrenceIndicationInOverviewRuler" overviewRulerPreferenceValue="true" verticalRulerPreferenceKey="expressionText.occurrenceIndicationInVerticalRuler" verticalRulerPreferenceValue="false" colorPreferenceKey="expressionText.occurrenceIndicationColor" colorPreferenceValue="212,212,212" presentationLayer="4" showInNextPrevDropdownToolbarActionKey="expressionText.showOccurrenceInNextPrevDropdownToolbarAction" showInNextPrevDropdownToolbarAction="true" isGoToNextNavigationTargetKey="expressionText.isOccurrenceGoToNextNavigationTarget" isGoToNextNavigationTarget="false" isGoToPreviousNavigationTargetKey="expressionText.isOccurrenceGoToPreviousNavigationTarget" isGoToPreviousNavigationTarget="false" textStylePreferenceKey="expressionText.occurrenceTextStyle" textStylePreferenceValue="NONE">
		</specification>
		<specification annotationType="org.js.model.expression.resource.expressionText.ui.occurences.declaration" label="Declarations (in .expressionText files)" textPreferenceKey="expressionText.declarationIndication" textPreferenceValue="false" highlightPreferenceKey="expressionText.declarationHighlighting" highlightPreferenceValue="true" overviewRulerPreferenceKey="expressionText.declarationIndicationInOverviewRuler" overviewRulerPreferenceValue="true" verticalRulerPreferenceKey="expressionText.declarationIndicationInVerticalRuler" verticalRulerPreferenceValue="false" colorPreferenceKey="expressionText.declarationIndicationColor" colorPreferenceValue="240,216,168" presentationLayer="4" textStylePreferenceKey="expressionText.declarationTextStyle" textStylePreferenceValue="NONE">
		</specification>
	</extension>
	
	<extension point="org.eclipse.ui.editors.annotationTypes">
		<type name="org.js.model.expression.resource.expressionText.ui.debug.lineBreakpoint" markerType="org.js.model.expression.resource.expressionText.debug.lineBreakpoint.marker" super="org.eclipse.debug.core.breakpoint">
		</type>
	</extension>
	
	<extension point="org.eclipse.ui.editors.markerAnnotationSpecification">
		<specification annotationType="org.js.model.expression.resource.expressionText.ui.debug.lineBreakpoint" label="Breakpoints (in .expressionText files)" icon="/icons/breakpoint_icon.gif" textPreferenceKey="org.js.model.expression.resource.expressionText.ui.lineBreakpoint" textPreferenceValue="false" highlightPreferenceKey="org.js.model.expression.resource.expressionText.ui.lineBreakpointHighlighting" highlightPreferenceValue="true" contributesToHeader="false" overviewRulerPreferenceKey="org.js.model.expression.resource.expressionText.ui.lineBreakpointIndicationInOverviewRuler" overviewRulerPreferenceValue="true" verticalRulerPreferenceKey="org.js.model.expression.resource.expressionText.ui.lineBreakpointIndicationInVerticalRuler" verticalRulerPreferenceValue="false" colorPreferenceKey="org.js.model.expression.resource.expressionText.ui.lineBreakpointColor" colorPreferenceValue="212,212,212" presentationLayer="4" showInNextPrevDropdownToolbarActionKey="org.js.model.expression.resource.expressionText.ui.showLineBreakpointInNextPrevDropdownToolbarAction" showInNextPrevDropdownToolbarAction="true" isGoToNextNavigationTargetKey="org.js.model.expression.resource.expressionText.ui.isLineBreakpointGoToNextNavigationTarget" isGoToNextNavigationTarget="false" isGoToPreviousNavigationTargetKey="org.js.model.expression.resource.expressionText.ui.isLineBreakpointGoToPreviousNavigationTarget" isGoToPreviousNavigationTarget="false" textStylePreferenceKey="org.js.model.expression.resource.expressionText.ui.lineBreakpointTextStyle" textStylePreferenceValue="NONE">
		</specification>
	</extension>
	
	<extension point="org.eclipse.core.runtime.adapters">
		<factory adaptableType="org.js.model.expression.resource.expressionText.ui.ExpressionTextEditor" class="org.js.model.expression.resource.expressionText.ui.debug.ExpressionTextAdapterFactory">
			<adapter type="org.eclipse.debug.ui.actions.IToggleBreakpointsTarget">
			</adapter>
		</factory>
		<factory adaptableType="org.js.model.expression.resource.expressionText.debug.ExpressionTextDebugVariable" class="org.js.model.expression.resource.expressionText.ui.debug.ExpressionTextAdapterFactory">
			<adapter type="org.eclipse.debug.internal.ui.viewers.model.provisional.IElementLabelProvider">
			</adapter>
		</factory>
		<factory adaptableType="org.js.model.expression.resource.expressionText.debug.ExpressionTextDebugVariable" class="org.js.model.expression.resource.expressionText.ui.debug.ExpressionTextAdapterFactory">
			<adapter type="org.eclipse.debug.internal.ui.viewers.model.provisional.IElementContentProvider">
			</adapter>
		</factory>
	</extension>
	
	<extension point="org.eclipse.ui.popupMenus">
		<viewerContribution id="org.js.model.expression.resource.expressionText.ui.RulerPopupActions" targetID="org.js.model.expression.resource.expressionText.EditorRuler">
			<action id="org.js.model.expression.resource.expressionText.ui.toggleBreakpointAction" icon="icons/breakpoint_icon.gif" label="Toggle Breakpoint" class="org.eclipse.debug.ui.actions.RulerToggleBreakpointActionDelegate" menubarPath="debug">
			</action>
		</viewerContribution>
	</extension>
	
	<extension point="org.eclipse.ui.editorActions">
		<editorContribution targetID="org.js.model.expression.resource.expressionText.ui.ExpressionTextEditor" id="org.js.model.expression.resource.expressionText.ui.BreakpointRulerActions">
			<action id="org.js.model.expression.resource.expressionText.ui.debug.RulerToggleBreakpointAction" label="Add breakpoint" class="org.eclipse.debug.ui.actions.RulerToggleBreakpointActionDelegate" actionID="RulerDoubleClick">
			</action>
		</editorContribution>
	</extension>
	
	<extension point="org.eclipse.debug.ui.debugModelPresentations">
		<debugModelPresentation id="org.js.model.expression.resource.expressionText.debugModel" class="org.js.model.expression.resource.expressionText.ui.debug.ExpressionTextDebugModelPresentation">
		</debugModelPresentation>
	</extension>
	
</plugin>
